{"componentChunkName":"component---src-templates-blog-post-jsx","path":"/blog/Git Introduccion/","result":{"data":{"site":{"siteMetadata":{"title":"Bhalut"}},"markdownRemark":{"id":"fd933ff8-ada2-5956-8249-19c61a1038ef","excerpt":"Esto es una guía para aprender Git, en esta primera parte te compartiré que es y por que es importante conocerlo. ¿Qué es Git? Git es un sistema control de…","html":"<p>Esto es una guía para aprender Git, en esta primera parte te compartiré que es y por que es importante conocerlo.</p>\n<h2>¿Qué es Git?</h2>\n<p>Git es un sistema control de version (Version-Control System como es conocido en ingles) distribuido para tener seguimiento de los cambios en el código durante el desarrollo de software.</p>\n<p>Git es <strong>gratis</strong> y de código abierto distribuido bajo los terminos de la GNU General Public License version 2.</p>\n<p>Es usado por la gran mayoria de compañias y projectos en el area del software, como ejemplo tenemos: Google, Android, Facebook, Microsoft, Linux, Netflix, Reddit, Twitter, LinkedIn y muchos más.</p>\n<p><strong>Dato curioso</strong></p>\n<p>Esta programado en: <a href=\"https://www.google.com/search?sxsrf=ALeKk038qQTbc7ejaMsqbbAmbDDEX6LeQA:1593721913679&#x26;q=C&#x26;stick=H4sIAAAAAAAAAONgVuLQz9U3MCwxS1rEyugMAAqDqO4QAAAA&#x26;sa=X&#x26;ved=2ahUKEwiy9KPktK_qAhVQTd8KHcrBBsAQmxMoATAnegQIChAD\">C</a>, <a href=\"https://www.google.com/search?sxsrf=ALeKk038qQTbc7ejaMsqbbAmbDDEX6LeQA:1593721913679&#x26;q=Bourne+Shell&#x26;stick=H4sIAAAAAAAAAONgVuLQz9U3yDOIz1jEyuOUX1qUl6oQnJGakwMAwZaOjxsAAAA&#x26;sa=X&#x26;ved=2ahUKEwiy9KPktK_qAhVQTd8KHcrBBsAQmxMoAjAnegQIChAE\">Bourne Shell</a>, Perl</p>\n<h2>¿Para qué?</h2>\n<p>Antes de Git, o de sistemas control de versiones, las versiones en el desarrollo de software eran abministradas por copias de los archivos fuente para conservar los cambios anteriores y los actuales.</p>\n<p>Con la llegada de estos sistemas y Git como sobresaliente en toda la industria, las reglas de juego cambian, ahora solo debes de tener tu proyecto, y con base a los mismos archivos fuentes puedes tener cambios anteriores y actuales de tu código.</p>\n<h2>¿Quién lo creo?</h2>\n<p>Su creador es <a href=\"https://es.wikipedia.org/wiki/Linus_Torvalds\">Linus Torvalds</a>.</p>\n<blockquote>\n<p>Git es un software de control de versiones diseñado por Linus Torvalds, pensando en la eficiencia y la confiabilidad del mantenimiento de versiones de aplicaciones cuando éstas tienen un gran número de archivos de código fuente. <a href=\"https://es.wikipedia.org/wiki/Git\">Wikipedia</a></p>\n</blockquote>\n<h2>Historia</h2>\n<p>Como muchas de las grandes cosas en esta vida, Git comenzó con un poco de destrucción creativa y una gran polémica.</p>\n<p>El kernel de Linux es un proyecto de software de código abierto con un alcance bastante amplio. Durante la mayor parte del mantenimiento del kernel de Linux (1991-2002), los cambios en el software se realizaban a través de parches y archivos. En el 2002, el proyecto del kernel de Linux empezó a usar un DVCS propietario llamado BitKeeper.</p>\n<p>En el 2005, la relación entre la comunidad que desarrollaba el kernel de Linux y la compañía que desarrollaba BitKeeper se vino abajo y la herramienta dejó de ser ofrecida de manera gratuita. Esto impulsó a la comunidad de desarrollo de Linux (y en particular a Linus Torvalds, el creador de Linux) a desarrollar su propia herramienta basada en algunas de las lecciones que aprendieron mientras usaban BitKeeper. Algunos de los objetivos del nuevo sistema fueron los siguientes:</p>\n<ul>\n<li>Velocidad</li>\n<li>Diseño sencillo</li>\n<li>Gran soporte para desarrollo no lineal (miles de ramas paralelas)</li>\n<li>Completamente distribuido</li>\n<li>Capaz de manejar grandes proyectos (como el kernel de Linux) eficientemente (velocidad y tamaño de los datos)</li>\n</ul>\n<p>Desde su nacimiento en el 2005, Git ha evolucionado y madurado para ser fácil de usar y conservar sus características iniciales. Es tremendamente rápido, muy eficiente con grandes proyectos y tiene un increíble sistema de ramificación (branching) para desarrollo no lineal.</p>\n<p>Esto hace parte de <a href=\"https://git-scm.com/book/es/v2/Inicio---Sobre-el-Control-de-Versiones-Una-breve-historia-de-Git\">Una breve historia de Git.</a></p>","frontmatter":{"title":"Git - Introducción | Guía parte 1","date":"June 25, 2020","description":"En esta primera parte te compartiré que es y por que es importante conocerlo."}}},"pageContext":{"slug":"/Git Introduccion/","previous":null,"next":{"fields":{"slug":"/Git Primeros Pasos/"},"frontmatter":{"title":"Git - Primeros pasos | Guía parte 2"}}}}}